@use '../root' as *;

/*----------------------------------------------
    # Helping  style here
----------------------------------------------*/
//page scroll bar add
::-webkit-scrollbar {
	width: 10px;
	height: 4px;
}
/* Track */
::-webkit-scrollbar-track {
	box-shadow: inset 0 0 5px $theme-color;
}
/* Handle */
::-webkit-scrollbar-thumb {
  background: $theme-color;
  border-radius: 5px;
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  -ms-border-radius: 5px;
  -o-border-radius: 5px;
}
//page scroll bar add

//Basic Code Start
.fix {
  overflow: hidden;
}

.ralt{
 position: relative;
}

//Basic Code End

//Video Css Start
.ripple {
  position: relative;

  &::before,&::after {
      position: absolute;
      left: 50%;
      top: 50%;
      width: 60px;
      height: 60px;
      -webkit-transform: translateX(-50%) translateY(-50%);
      transform: translateX(-50%) translateY(-50%);
      border-radius: 50%;
      box-shadow: 0 0 0 0 rgba(56, 75, 255, 0.5);
      -webkit-animation: rippleOne 3s infinite;
      animation: rippleOne 3s infinite;
  }

  &::before {
      -webkit-animation-delay: 0.9s;
      animation-delay: 0.9s;
      content: "";
      position: absolute;
      right: 0;
      bottom: 0;
  }

  &::after {
      -webkit-animation-delay: 0.6s;
      animation-delay: 0.6s;
      content: "";
      position: absolute;
      right: 0;
      bottom: 0;
  }
}
//Video Css End

/* background */
.bg-cover {
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
  background-position: center;
}

// Padding
.section-padding {
  padding: 120px 0;
  @include breakpoint(max-lg) {
    padding: 80px 0;
  }
}

.wcu1-fix {
  @include breakpoint (xl2){
    padding-left: 62px;
  }
}

.fix-pb-50 {
  padding-bottom: 50px;
  @include breakpoint (max-md){
    padding-bottom: 20px;
  }
}
.fix-pb-80 {
  padding-bottom: 80px;
  @include breakpoint (max-md){
    padding-bottom: 40px;
  }
}
.fix-pb-100 {
  padding-bottom: 100px;
  @include breakpoint (max-lg){
    padding-bottom: 70px;
  }
  @include breakpoint (max-md){
    padding-bottom: 40px;
  }
}

.mxw-405 {
  max-width: 405px;
  @include breakpoint (max-xl){
    max-width: 100%;
  }
}

.mxw-636 {
  max-width: 636px;
}

.mxw-570 {
  max-width: 570px;
}

.bg-pricing2 {
  border-radius: 5px;
  background: var(--100, #FCF9EB);
  padding: 130px 90px;
  @include breakpoint (max-xl){
    padding: 60px 40px;
  }
  @include breakpoint (max-md){
    padding: 30px 30px;
  }
  @include breakpoint (max-xs){
    padding: 20px 15px;
  }
}






/* =============================
   TagCloud Helper Styles
============================= */

// Variables
:root {
  --tagcloud-transition-user-duration: 1250ms;
  --tagcloud-transition-user-ease: ease-in-out;
  --tagcloud-transition-duration: 250ms;
  --tagcloud-transition-ease: ease-out;
  // --tagcloud-bg-color-rgb: 0, 0, 0;
  --tagcloud-bg-color-rgb: #fff;
  --tagcloud-animation-duration: 25s;
  --tagcloud-animation-direction: normal;
  --tagcloud-animation-play-state: running;
  --tagcloud-diameter: 62rem;
  --tagcloud-start-rotation: 54;
  --tagcloud-controls-diameter: 25rem;
  --tagcloud-control-bg-color: transparent;
  --tagcloud-control-bg-hover-color: transparent;
  --tagcloud-control-bg-checked-color: transparent;
  --tag-diameter: 5.5rem;
  --tag-font-color-rgb: 255, 255, 255;
  --tag-font-family: 'Open Sans', sans-serif;
  --tag-font-size: 1rem;
}

// Reset
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  border: 0;
  box-sizing: border-box;
}

*:focus {
  outline: none;
}

.tagcloud-container {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background-color: rgb(var(--tagcloud-bg-color-rgb));
  // overflow: hidden;
}


// Tagcloud Wrapper
.tagcloud-wrapper {
  --_control-diamater: var(--tagcloud-controls-diameter);
  --_control-radius: calc(var(--_control-diamater) / 2);
  --_diameter: var(--tagcloud-diameter);
  --_radius: calc(var(--_diameter) / 2 - var(--tag-diameter) / 2);
  width: var(--control-diameter);
  aspect-ratio: 1 / 1;
  font-family: var(--tag-font-family);
  font-size: var(--tag-font-size);

  @media only screen and (max-width: 48rem) {
    --_control-diamater: calc(var(--tagcloud-controls-diameter) * 0.5);
    --_diameter: calc(var(--tagcloud-diameter) * 0.88);
  }

  @media only screen and (max-width: 32rem) {
    --_diameter: calc(var(--tagcloud-diameter) * 0.75);
  }

  &:has(.tagcloud-rotation:hover) {
    --tagcloud-animation-play-state: paused;
  }

  .tagcloud-tags {
    position: absolute;
    width: var(--_diameter);
    aspect-ratio: 1 / 1;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    list-style-type: none;
    position: relative;
    transform-style: inherit;
    animation: tagcloud-rotation var(--tagcloud-animation-duration) var(--tagcloud-animation-direction) linear infinite var(--tagcloud-animation-play-state);
  }

  .tagcloud-tag {
    --_phi: acos(calc(-1 + (2 * var(--index)) / var(--num-elements)));
    --_theta: calc(sqrt(var(--num-elements) * 3.14159) * var(--_phi));
    --_x: calc(cos(var(--_theta)) * sin(var(--_phi)));
    --_y: calc(sin(var(--_theta)) * sin(var(--_phi)));
    --_z: calc(cos(var(--_phi)));
    --_vector-length: sqrt(var(--_x) * var(--_x) + var(--_y) * var(--_y) + var(--_z) * var(--_z));
    --_normalized-x: calc(var(--_x) / var(--_vector-length));
    --_normalized-y: calc(var(--_y) / var(--_vector-length));
    --_normalized-z: calc(var(--_z) / var(--_vector-length));
    --_scaled-x: calc(var(--_normalized-x) * var(--_radius));
    --_scaled-y: calc(var(--_normalized-y) * var(--_radius));
    --_scaled-z: calc(var(--_normalized-z) * var(--_radius));
    --_final-x: calc(var(--_scaled-x) + var(--_radius));
    --_final-y: calc(var(--_scaled-y) + var(--_radius));
    --_final-z: var(--_scaled-z);

    pointer-events: none;
    width: var(--tag-diameter);
    height: var(--tag-diameter);
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    transition: opacity var(--tagcloud-transition-duration) var(--tagcloud-transition-ease);
    transform: translate3d(var(--_final-x), var(--_final-y), var(--_final-z));
    animation: tagcloud-tag-rotation var(--tagcloud-animation-duration) var(--tagcloud-animation-direction) linear infinite var(--tagcloud-animation-play-state);

    div {
      transform: rotateZ(calc(var(--_current-rotation) * -1deg));
      transition: transform var(--tagcloud-transition-user-duration) var(--tagcloud-transition-user-ease);

      a {
        pointer-events: initial;
        color: rgb(var(--tag-font-color-rgb));
        text-decoration: none;
        text-shadow: 1px 1px 1px rgb(var(--tagcloud-bg-color-rgb)),
                     1px -1px 1px rgb(var(--tagcloud-bg-color-rgb)),
                    -1px 1px 1px rgb(var(--tagcloud-bg-color-rgb)),
                    -1px -1px 1px rgb(var(--tagcloud-bg-color-rgb)),
                     0 0 1rem rgb(var(--tagcloud-bg-color-rgb));
      }
    }
  }

  .tagcloud-controls {
    width: var(--_control-diamater);
    aspect-ratio: 1 / 1;
    position: relative;
    --_current-rotation: var(--tagcloud-start-rotation);
    transform-style: inherit;

    .tagcloud-control-button {
      --_width: var(--_control-radius);
      --_height: calc(var(--_control-diamater) * 3.14159 / var(--num-elements) + 1px);
      --_theta-start: 0;
      --_theta-length: calc(2 * 3.14159);
      --_segment: calc(var(--_theta-start) + var(--index) / var(--num-elements) * var(--_theta-length));
      --_x: calc(var(--_control-radius) * cos(var(--_segment)));
      --_y: calc(var(--_control-radius) * sin(var(--_segment)) + var(--_control-radius) - var(--_height) / 2);
      --_rotation: calc(var(--index) / var(--num-elements) * 360deg);

      position: absolute;
      left: var(--_x);
      top: var(--_y);
      width: var(--_width);
      height: var(--_height);
      clip-path: polygon(0% 50%, 100% 0%, 100% 100%);
      transform-origin: right center;
      transform: rotate(var(--_rotation));
      transition: background-color var(--tagcloud-transition-duration) var(--tagcloud-transition-ease);
      background-color: var(--tagcloud-control-bg-color);

      input {
        -webkit-appearance: none;
        appearance: none;
        opacity: 0;
        width: 100%;
        height: 100%;
      }

      &:has(input:checked) {
        background-color: var(--tagcloud-control-bg-checked-color);
      }

      &:has(input:hover) {
        background-color: var(--tagcloud-control-bg-hover-color);
      }

      & ~ .tagcloud-rotation {
        transform: translate(-50%, -50%) rotate(calc(var(--_current-rotation) * 1deg));

        .tagcloud-tags .tagcloud-tag div {
          transform: rotateZ(calc(var(--_current-rotation) * -1deg));
        }
      }
    }

    // Control rotation rules (example, add up to 20 or more)
    @for $i from 1 through 20 {
      &:has(.tagcloud-control-button:nth-child(#{$i}) input:checked) {
        --_current-rotation: #{(18 * ($i - 1))};
      }
    }

    .tagcloud-rotation {
      position: absolute;
      width: var(--_diameter);
      aspect-ratio: 1 / 1;
      perspective: calc(var(--_diameter) * 2);
      transform-style: preserve-3d;
      left: 50%;
      top: 50%;
      background: radial-gradient(rgba(var(--tagcloud-bg-color-rgb), 0.75) 15%, rgba(var(--tagcloud-bg-color-rgb), 0) calc(75% - var(--tag-diameter)));
      border-radius: 50%;
      transform: translate(-50%, -50%) rotate(calc(var(--_current-rotation) * 1deg));
      transition: transform var(--tagcloud-transition-user-duration) var(--tagcloud-transition-user-ease);
    }
  }

  // When hovering one tag, dim others
  .tagcloud-tags:has(.tagcloud-tag div a:hover) {
    .tagcloud-tag:not(:has(div a:hover)) {
      opacity: 0.25;
    }
  }
}

// Keyframes
@keyframes tagcloud-rotation {
  from {
    transform: translate(-50%, -50%) rotateX(0deg);
  }
  to {
    transform: translate(-50%, -50%) rotateX(360deg);
  }
}

@keyframes tagcloud-tag-rotation {
  from {
    transform: translate3d(var(--_final-x), var(--_final-y), var(--_final-z)) rotateX(360deg);
  }
  to {
    transform: translate3d(var(--_final-x), var(--_final-y), var(--_final-z)) rotateX(0deg);
  }
}




// Floating cta section 
.service {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
  width: 100%;
  max-width: 1080px;
  height: 705px;
  padding: 40px;
  gap: 30px;
  border-radius: 20px;
  border: 1px solid var(--P2, #E5087B);
  background: var(--100, #F7FAFF);
  position: relative;
  &__shape1 {
    position: absolute;
    border-radius: 478px;
    opacity: 0.2;
    background: var(--P1, linear-gradient(270deg, #9708CC -54.69%, #43CBFF 99.85%));
    filter: blur(150px);
    width: 478px;
    height: 478px;
    flex-shrink: 0;
  }
  &__shape2 {
    position: absolute;
    border-radius: 478px;
    opacity: 0.2;
    background: linear-gradient(90deg, #E5087B 0%, #FDD819 125.62%);
    filter: blur(150px);
    width: 478px;
    height: 478px;
    flex-shrink: 0;
  }

  &-thumb {
    position: relative;
    padding: 20px;
    border-radius: 20px;
    background: var(--White, #FFF);
    box-shadow: 0px 5px 60px 0px rgba(0, 0, 0, 0.05);
    max-width: 485px;
    position: relative;
    z-index: 5;
    &__one {
      border-radius: 20px;
      padding-bottom: 30px;
      img {
        border-radius: 20px;
      }
    }
    &__btn {
      position: absolute;
      bottom: 34%;
      left: 7%;
      display: inline-flex;
      height: 50px;
      padding: 20px;
      align-items: center;
      gap: 10px;
      flex-shrink: 0;
      border-radius: 10px;
      background: var(--P2, linear-gradient(90deg, #E5087B 0%, #FDD819 125.62%));
      color: var(--White, #FFF);
      font-family: Lato;
      font-size: 17px;
      font-style: normal;
      font-weight: 700;
      line-height: 17px; /* 100% */
      text-transform: uppercase;
      &:hover {
        a {
          color: $white;
        }
      }
    }
    &__title {
      color: var(--900, #000);
      font-feature-settings: 'liga' off, 'clig' off;
      font-family: Lato;
      font-size: 20px;
      font-style: normal;
      font-weight: 600;
      line-height: 30px; /* 150% */
      letter-spacing: 0.36px;
      padding-bottom: 30px;

    }
    &__desc {
      color: var(--800, #6B7280);
      font-family: Lato;
      font-size: 18px;
      font-style: normal;
      font-weight: 400;
      line-height: 30px; /* 166.667% */
      letter-spacing: 0.16px;
    }
  }
  &-list {
    &-item {
      display: flex;
      align-items: center;
      gap: 20px;
      &__icon {
        padding-bottom: 40px;
        flex: none;
      }
      &-content {
        &__title {
          color: var(--900, #000);
          font-feature-settings: 'liga' off, 'clig' off;
          font-family: Lato;
          font-size: 20px;
          font-style: normal;
          font-weight: 600;
          line-height: 30px; /* 150% */
          letter-spacing: 0.36px;
          padding-bottom: 15px;
        }
        &__desc {
          color: var(--800, #6B7280);
          font-family: Lato;
          font-size: 18px;
          font-style: normal;
          font-weight: 400;
          line-height: 30px; /* 166.667% */
          letter-spacing: 0.16px;
        }
        &__border {
          margin-top: 20px;
          margin-bottom: 25px;
          background: linear-gradient(270deg, #9708CC -54.69%, #43CBFF 99.85%);
          width: 405px;
          height: 1px;
        }
      }
    }
  }
}

.project-nav {
  display: flex;
  gap: 30px;
  max-width: 835px;
  height: 110px;
  flex-shrink: 0;
  align-items: center;

  border-radius: 5px;
  background: var(--P1, linear-gradient(270deg, #9708CC -54.69%, #43CBFF 99.85%));
  padding: 30px 50px;

  &__btn {
    display: inline-flex;
    height: 50px;
    padding: 20px;
    align-items: center;
    gap: 10px;
    flex-shrink: 0;
    border-radius: 10px;
    border: 1px solid var(--100, #F7FAFF);
    color: var(--White, #FFF);
    font-family: Lato;
    font-size: 17px;
    font-style: normal;
    font-weight: 700;
    line-height: 17px; 
    text-transform: uppercase;
    &--start {
      border-radius: 10px;
      background: var(--P2, linear-gradient(90deg, #E5087B 0%, #FDD819 125.62%));
      display: inline-flex;
      height: 70px;
      padding: 40px 20px;
      align-items: center;
      gap: 10px;
      flex-shrink: 0;
      border: 1px solid transparent; 
    }


    &:hover {
      color: $white;
      border: 1px solid transparent;
      background: var(--P2, linear-gradient(90deg, #E5087B 0%, #FDD819 125.62%));
    }
  }
}


.service-project {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  z-index: 999; 
}

.blur-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  backdrop-filter: blur(6px);
  background-color: rgba(0, 0, 0, 0.2);
  opacity: 0;
  pointer-events: none;
  z-index: 998;
  transition: opacity 0.4s ease;
}
.blur-overlay.active {
  opacity: 1;
  pointer-events: auto;
}


.service-wrapper {
  position: relative;
  .service {
    opacity: 0;
    visibility: hidden;
    // transform: translateY(20px);
    @include transition;


    position: absolute;
    top: -650px; 
    // left: 50%;
    // transform: translate(-50%, 20px);
    z-index: 10;
  }

  .project-nav__btn:hover ~ .service,
  .project-nav:hover ~ .service,
  .service:hover {
    opacity: 1;
    visibility: visible;
    @include transition;
  }
}


.service {
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.4s ease, transform 0.4s ease;

  &.visible {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
    @include transition;
  }
}
